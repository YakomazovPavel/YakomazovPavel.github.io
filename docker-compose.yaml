services:
  # bot:
  #   container_name: bot
  #   hostname: bot
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   # depends_on:
  #   #   - nginx
  #   build:
  #     context: ./bot
  #     dockerfile: ./Dockerfile
  #   # environment:
  #   #   PYTHONUNBUFFERED: 1
  #   env_file: ".env"
  #   # expose:
  #   #   - "8888"
  backend:
    container_name: backend
    hostname: backend
    restart: unless-stopped
    ports:
      - 8000:8000
    # depends_on:
    #   - nginx
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    # environment:
    #   PYTHONUNBUFFERED: 1
    env_file: ".env"
    volumes:
      - ./backend/vaffel.db:/app/vaffel.db
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    # expose:
    #   - "8888"
  nginx:
    image: nginx
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx/public:/www/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/vaffelbot.crt:/etc/nginx/ssl/vaffelbot.crt
      - ./nginx/vaffelbot.key:/etc/nginx/ssl/vaffelbot.key
    ports:
      - 80:80
      - 443:443

  # db:
  #   container_name: postgres
  #   image: postgres
  #   restart: always
  #   # set shared memory limit when using docker-compose
  #   shm_size: 128mb
  #   # or set shared memory limit when deploy via swarm stack
  #   #volumes:
  #   #  - type: tmpfs
  #   #    target: /dev/shm
  #   #    tmpfs:
  #   #      size: 134217728 # 128*2^20 bytes = 128Mb
  #   env_file: ".env"
  #   # environment:
  #   #   POSTGRES_USER:
  #   #   POSTGRES_PASSWORD:
  #   #   PGDATA:
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./database:/var/lib/postgresql/data/pgdata

    # Для подключения к консоли postgres
    # docker exet -it container_name psql -U user -d vaffel
